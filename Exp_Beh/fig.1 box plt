@author: neuronalplasticity group (sinanmalik)
"""

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from scipy.stats import mannwhitneyu

# Data for Control (CNTRL) and Hungry (HGRY) groups
control = [] data {insert the data with groups or add the csv file with data}
hungry = []

# Mann-Whitney U test
stat, p = mannwhitneyu(control, hungry)

# Set significance level
alpha = 0.05
significance = 'ns'
if p < alpha:
    significance = '*'

# Create boxplot
plt.figure(figsize=(4.5, 6))
sns.boxplot(data=[control, hungry], palette=["#F7F7F7", "#F7F7F7"], width=0.29)
sns.stripplot(data=[control, hungry], palette=["#9932CC", "#483D8B"], jitter=True, size=6)

# Add space before the y-axis
plt.xlim(left=-0.5)  # Adjust this value to increase or decrease the space

# Adding the significance label and line
y, h, col = max(max(control), max(hungry)) + 10, 10, 'k'
plt.plot([0, 0, 1, 1], [y, y + h, y + h, y], lw=1, c=col)
plt.text(0.5, y + h + 2, significance, ha='center', va='bottom', color=col, fontsize=16)

# Remove top and right spines
sns.despine(left=False, bottom=False)

# Customize plot
plt.xticks([0, 1], ['Control', 'Hungry'], fontname='Arial', fontsize=12)
plt.ylabel('Slow time (s)',labelpad=5.5, size=12, fontname='Arial')
plt.tick_params(axis='x', which='minor', pad=6)  # Adjust the pad value as needed
plt.title('')

#plt the figure with high resolution (format="png", dpi=2000)

# Show the plot
plt.show()


-------------------------------------------
updated Box plot with colored outline and whiskers 

import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
from scipy.stats import mannwhitneyu

# Sample data
control = []
hungry = [] data {insert the data with groups or add the csv file with data}

# Mann-Whitney U test (since data might not be normally distributed)
stat, p_value = mannwhitneyu(control, hungry)

# Set significance level
alpha = 0.05
significance = 'ns' if p_value >= alpha else '*'

# Create figure and axis
fig, ax = plt.subplots(figsize=(4.5, 5))

# Define colors for control and hungry groups
colors = ["lightcoral", "deepskyblue"]

# Create boxplot with customized outlier markers
bp = ax.boxplot(
    [control, hungry],
    patch_artist=True,
    boxprops=dict(facecolor='none', edgecolor=colors[0]),
    whiskerprops=dict(color=colors[0]),
    capprops=dict(color=colors[0]),
    medianprops=dict(color=colors[0]),
    flierprops=dict(marker='', markerfacecolor=colors[0], markersize=8),
    positions=[0, 1],
    widths=0.23
)

# Customize the second box
bp['boxes'][1].set(edgecolor=colors[1])
bp['whiskers'][2].set(color=colors[1])
bp['whiskers'][3].set(color=colors[1])
bp['caps'][2].set(color=colors[1])
bp['caps'][3].set(color=colors[1])
bp['medians'][1].set(color=colors[1])
bp['fliers'][1].set(marker='', markerfacecolor=colors[1], markersize=8)

# Strip plot (scatter points)
sns.stripplot(data=[control, hungry], palette=colors, jitter=True, size=6, ax=ax)

# Remove top and right spines
sns.despine(left=False, bottom=False)

# Add space before the y-axis
plt.xlim(left=-0.3)

# Adding the significance label and line
y, h, col = max(max(control), max(hungry)) + 2, 2, 'k'
plt.plot([0, 0, 1, 1], [y, y + h, y + h, y], lw=0.8, c=col)
plt.text(0.5, y + h + 0.5, significance, ha='center', va='bottom', color=col, fontsize=11)

# Customize plot
plt.xticks([0, 1], ['Control', 'Hungry'], fontname='Arial', fontsize=12)
plt.ylabel('Freezing time [seconds]', labelpad=5.5, size=12, fontname='Arial')
plt.tick_params(axis='x', which='minor', pad=6)
plt.title('')

# Show the plot
plt.show()

#plt the figure with high resolution (format="png", dpi=600)

# Print p-value for reference
print(f"P-value: {p_value}")
